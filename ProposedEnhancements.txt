
**************** DONE ****************
1. Allow chose of drive to write mbr too.
	Fixes:
	1. Default USB boot mount USB as drive C: preventing XOSL install. Abbility to select mbr drive would circumvent this.
	2. On systems with multiple drives, multiple XOSL installs can be made, selectable via bios boot choice.

	Implementation:
	Install\INSTALL
		FatInst.cpp
			int CFatInstall::InstallIpl(void *Ipl) 
			-> int CFatInstall::InstallIpl(void *Ipl, int Drive)
		Install.cpp
			int CInstaller::Install(CVesa::TGraphicsMode GraphicsMode, CMouse::TMouseType MouseType, const CDosDriveList::CDosDrive &DosDrive, bool PartMan, bool SmartBm)
			--> 
			int CInstaller::Install(CVesa::TGraphicsMode GraphicsMode, CMouse::TMouseType MouseType, const CDosDriveList::CDosDrive &DosDrive, bool PartMan, bool SmartBm, int MbrDrive)
			
			int CInstaller::Install(CVesa::TGraphicsMode GraphicsMode, CMouse::TMouseType MouseType, int PartIndex, bool PartMan, bool SmartBm)
			--> 
			int CInstaller::Install(CVesa::TGraphicsMode GraphicsMode, CMouse::TMouseType MouseType, int PartIndex, bool PartMan, bool SmartBm, int MbrDrive)
			
			int CInstaller::Uninstall(const CDosDriveList::CDosDrive &DosDrive, int OriginalMbr)
			--> 
			int CInstaller::Uninstall(const CDosDriveList::CDosDrive &DosDrive, int OriginalMbr, int Drive)
			
			int CInstaller::Uninstall(int PartIndex, int OriginalMbr)
			--> 
			int CInstaller::Uninstall(int PartIndex, int OriginalMbr, int Drive)
			
			int CInstaller::Restore(int PartIndex)
			--> 
			int CInstaller::Restore(int PartIndex, int Drive)

		\INSTALL\Menus.cpp
			TextUI.AddMenuItem(4,"Drv Type System              Size ","Partition to install XOSL 1.1.9 on",1,PartNameCount,(const char **)PartNameList,0);
			-->
			TextUI.AddMenuItem(4,"Drv Type System (for XOSL)   Size ","Partition to install XOSL 1.1.9 on",1,PartNameCount,(const char **)PartNameList,0);

			TextUI.AddMenuItem(10,"Start installation","Install Extended Operating System Loader 1.1.9",1);
			-->
			TextUI.AddMenuItem(12,"Start installation","Install Extended Operating System Loader 1.1.9",1);

			New
			TextUI.AddMenuItem(8,"Drv Type System (for MBR)    Size ","Drive to install XOSL 1.1.9 MBR on",1,PartNameCount,(const char **)PartNameList,0);

			TextUI.AddMenuItem(11,"Return to install menu","Return to install menu",1);
			TextUI.AddMenuItem(13,"Return to install menu","Return to install menu",1);

		\INSTALL\main.cpp
			int CApplication::StartInstallSep()
				add
				DriveMbr = InstallMenus.ResolvePartIndex(TextUI.GetOptionIndex(8));


		Partition = PartList.GetPartition(Index);
		MbrDrive=Partition->Drive
		MbrDrive = PartList.GetPartition(Index)->Drive
1. Completed for XOSL seperate partition install in xosl11a


2. Include XOSL118 fixes
2. Completed.

4. In "Add Boot Item" menu,fix patition size display to unsigned long instead of long.
4. Completed

5. Fix partition size display for large disks.
5. Completed.

6. Fix start of Alloc area to start at seg after end of BSS
6. Completed

XOSL11C

3. Install assumes a fixed count of XOSLIMGx.XXF files.
	\install\install\FatInst.cpp line 129
		int CFatInstall::InstallFiles(const CDosDriveList::CDosDrive &DosDrive)
	\install\install\Files.cpp line 83
		const char *CXoslFiles::FileList[] = {
	\install\install\Files.cpp line 142
		int CFsCreator::PackFiles()
	Suggested fix:

	next="1"
	copyok=0
	do
		nextfile=XOSLIMG${next}.XXF
		delete old nextfile  // don't care if it fails
		if exists new nextfile
			if copy new nextfile
			     copyok=1
			 else
			     copyok=-1
			 fi
		else
			copyok=2
		fi
	while copyok==1
	if copyok==-1
		msg failed to copy nextfile
		abort
	fi
XOSL11D

7. Ipl_brec assumes a maxiumum size of XOSLLOAD.XCF of 8192. It is now bigger!!
	Get size from directory enrty?
XOSL11E

8. Fix date/time settings of files in sep install. 
9. Fixed and tested for sep, FAT32 and FAT16
10. Fix smartbootloader "not enough memory" on install. OK with freedos probably issue with dos 6.22 config
XOSL11F

12. Fix install restore and delete, where xosl installed in HD other than HD0 in sep installs.
	Store which HD the mbr is written to during install in a new item CBootItemFile.MbrHDSector0 and retrieve it for display on restore and delete action.
	Need special refresh on partition change to update currently selected MbrHDSector0.
	Extra parameter to TextUI.AddMenuItem for partition selection, to pass current MbrHDSector0? 
	Textlist.cpp
		HandleKeyAction
			Handles key input for currently selected item via ItemIndex.
		CTextList::Refresh
			Refreshes all ListItems. The list ite index is determined by the first parameter of TextUI.AddMenuItem in menus.cpp
		Solution:
			Added new int LinkedListItemIndex ;  to class CListItem in TextList.h line 53
			Revert change to CTextList::AddItem at line 62 in TextList.cpp Replace OptionIndex with int LinkedListItemIndex = -1.
			Revert change to  CTextList::AddItem at line 83 replacing OptionIndex with 0.
			Add Node->LinkedListItemIndex = LinkedListItemIndex; after line 83.
			Before Refresh in PAGE_UP & PAGE_DOWN in HandleKeyAction
				if (LinkedListItemIndex != -1){
					// Set the index on the linked item
					TextUI.SetOptionIndex(LinkedListItem, CInstallMenus.MbrHDSector0List[LinkedListItem]);
				}
	
XOSL11G
	
13. Enable install of XOSL as chain load only (Do not install Sector 0 Mbr)
XOSL11H

14. Create upgrade option.
	Save existing config files ( boot items BOOTITEM.XDF; preferences XOSLDATA.XDF ). 
	Convert to new release and restore after install OR update existing files to new release and avoid installing new ones.
XOSL120a1	

15. Fix updating partlist when returning to main memu after installing XOSL
XOSL120a2

16. Migrate to Openwatcom 2.0. long long (64bit long) required for gpt disks.
XOSL130a3

17. Add boot from GPT via bios (msdos).
	Install
		Add gpt disk and partition types to selection list.
	ipl_brec
		Add gpt disk and partition type. (worked without change!!)

Boot from gpt partitons works for :
	grub2
	xosl fs
XOSL130a5

18. Increase size of BootItemsFile to allow more partitions
Incresed no. of partitions from 56 to 230
This should allow a fully populated gpt disk (128 partition max).
Works with disk < 2TB
XOSL130a6


19. Fix to work with disks > 2TB
	Add HiddenSector64 to xosl boot record before Loader code. Reduce loader size by 8 bytes.
	Create gtp ipl_mbr and ipl_brec?
    Fix Update.
	Add version to start of boot items, to track when update should take place.
    Tested OK with 8TB drive.
XOSL130a7 debug
XOSL130a8 release

20. Fix ipls.bin size.
    Fix installing to dedicted partition via C: mount usb drive.

21.
1. Allow choice of drive to write mbr too for FAT install.
	Fixes:
	1. Default USB boot mount USB as drive C: preventing XOSL install. Abbility to select mbr drive would circumvent this.
	2. On systems with multiple drives, multiple XOSL installs can be made, selectable via bios boot chose.

	Implementation:
	Install\INSTALL
		\INSTALL\Menus.cpp
			InitInstFatMenu(

			New
			TextUI.AddMenuItem(3,"Drv for Sector0 MBR","Drive to install Sector 0 XOSL "XOSL_VERSION" MBR on",1,HDNameCount,(const char **)HDNameList,1);
			
			TextUI.AddMenuItem(3,"Ranish Partition Manager","Install Ranish Partition Manager 2.44 beta together with XOSL "XOSL_VERSION"",1,2,YesNoList,1);
			-->
			TextUI.AddMenuItem(4,"Ranish Partition Manager","Install Ranish Partition Manager 2.44 beta together with XOSL "XOSL_VERSION"",1,2,YesNoList,1);

			TextUI.AddMenuItem(4,"Smart Boot Manager","Install Smart Boot Manager 3.7.1 for CD-ROM booting support.",1,2,YesNoList,1);
			-->
			TextUI.AddMenuItem(5,"Smart Boot Manager","Install Smart Boot Manager 3.7.1 for CD-ROM booting support.",1,2,YesNoList,1);

			TextUI.AddMenuItem(6,"Start installation","Install Extended Operating System Loader "XOSL_VERSION"",1);
			-->
			TextUI.AddMenuItem(7,"Start installation","Install Extended Operating System Loader "XOSL_VERSION"",1);

			TextUI.AddMenuItem(8,"Return to install menu","Return to install menu",1);
			-->
			TextUI.AddMenuItem(9,"Return to install menu","Return to install menu",1);



		\INSTALL\main.cpp
			int CApplication::StartInstallFat()
				add
				unsigned char MbrHDSector0;

				MbrHDSector0 = InstallMenus.ResolveHDIndex(TextUI.GetOptionIndex(3));

				if (Installer.Install(GraphicsMode,MouseType,DosDrive,PartMan,SmartBootManager,0x80) == -1) {
				-->
				if (Installer.Install(GraphicsMode,MouseType,DosDrive,PartMan,SmartBootManager,MbrHDSector0) == -1) {




		Partition = PartList.GetPartition(Index);
		MbrDrive=Partition->Drive
		MbrDrive = PartList.GetPartition(Index)->Drive

22. Fixes.
	Upgrade FAT install fails.
		Missing code inserted.
	Mouse on zbox strange interation during xosl add and edit.
		Turning off animation in preferences to avoid the issue.
	Linux fsck.fat reports invalid file sizes in xosl fs.
		This is a linux fsck.fat issue. fsck.fat sees < 4096 clusters as FAT12. XOSL FS has 53. Using fsck.fat -A (Atari FAT16) as a work around.

XOSL130a9 debug

24. Add option to select root drive globally to allow correct operation when booted from a usb mounted as C:
    Add Master boot record to drive 0x80 to allow chain loading of its mbr.
	Initially, the value of HDOffset will be set on the command line.
	Install
		MbrHDSector0 will only set the HD number in in which to write the IPL MBR but the ipl.drivenumber written will always be 0x80.
		HDOffset will subtracted from the drive when the BootItems is populated.
		HDOffset will subtracted from the drive when IPL BREC bootrecord.drive set.
		The displayed HD and drive number will be adjusted by HDOffset. This should also prevent the usb media being over written.
		IPLData.DriveNumber and BootRecord.Drive will both be set to 0x80. This allows boot to proceed via BIOS when any drive is HD0.
		Module PTab: 
			MBRList contains Drive - HDOffset. 
			CreatPartList ignores Drives < 0x80

	XOSL App
		XOSL App will adjust the drivenumber in the BIOS sector zero load address (0x7c00) to the correct value before launching.
XOSL130a11 debug

24a. Fix upgrade of GPT partition.
24b. Check install FAT to GPT disk
XOSL130a12 release

24e. Check upgrage from xosl116

24d. Check upgrage from xosl118
	ombr -> mbr

24e. Rechecked upgrade from xosl 115 116 & 118. All OK.

24c. Check install form usb C: drive

24f. Fix backup and restore of xosl fs partition on install and uninstall.

24h. Store FSType in PARTIMG

XOSL130a12 release
**************** TODO ****************

25. Add boot via UEFI
	Use System Rescue kernel with stub to switch to real mode, load xoslloader and excute.

26. Add install via UEFI
	Use System Rescue kernel with stub to switch to real mode, load Install(er) and excute.

27. Direct boot of linux kernel on mbr, gpt ext ext4, lvm

28. Boot Windows on gpt disk.

